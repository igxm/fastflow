// Code generated by MockGen. DO NOT EDIT.
// Source: render.go

// Package render is a generated GoMock package.
package render

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRender is a mock of Render interface.
type MockRender struct {
	ctrl     *gomock.Controller
	recorder *MockRenderMockRecorder
}

// MockRenderMockRecorder is the mock recorder for MockRender.
type MockRenderMockRecorder struct {
	mock *MockRender
}

// NewMockRender creates a new mock instance.
func NewMockRender(ctrl *gomock.Controller) *MockRender {
	mock := &MockRender{ctrl: ctrl}
	mock.recorder = &MockRenderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRender) EXPECT() *MockRenderMockRecorder {
	return m.recorder
}

// Render mocks base method.
func (m *MockRender) Render(tplText string, data interface{}) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", tplText, data)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Render indicates an expected call of Render.
func (mr *MockRenderMockRecorder) Render(tplText, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockRender)(nil).Render), tplText, data)
}
